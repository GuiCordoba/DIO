# -*- coding: utf-8 -*-
"""Listas em Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13ul4oh2497JXW3rOw7rHJ0wKQGaeZuN7

## **Criação e Acesso aos Dados**
"""

# Matriz
matriz = [
    [1, 'a', 2],
    ['b', 3, 4],
    [6, 5, 'c']
]
print(matriz[0])
print(matriz[0][1])
print(matriz[2][2])

#Iterar Listas
carros = ['Gol', 'Celta', 'Palio']
for carro in carros:
    print(carro, end=', ')

#Função enumerate
carros = ['Gol', 'Celta', 'Palio']
for indice, carro in enumerate (carros):
    print(f'{indice}:{carro}', end=' ')

# Filtro versão 1
numeros = [1, 30, 21, 2, 9, 65, 34]
pares = []

for numero in numeros:
    if numero % 2 == 0:
        pares.append(numero)

print(pares)

# Filtro versão 2
numeros = [1, 30, 21, 2, 9, 65, 34]
pares = [numero for numero in numeros if numero % 2 == 0]
print(pares)

#Modificando valores versão 1
numeros = [1, 30, 21, 2, 9, 65, 34]
quadrado = []

for numero in numeros:
    quadrado.append(numero ** 2)
  
print(quadrado)

#Modificando valores versão 2
numeros = [1, 30, 21, 2, 9, 65, 34]
quadrado = [numero ** 2 for numero in numeros]

print(quadrado)

"""## **Métodos de Classe List**"""

# [].append
lista = []

lista.append(1)
lista.append('Python')
lista.append([40, 30, 20])

print(lista)

# [].clear
lista = [1, 'Python', [40, 30, 20]]


print(lista) 

lista.clear()

print(lista)

# [].copy
lista = [1, 'Python', [40, 30, 20]]

l2 = lista.copy()
l2[0] = 2
 
print(l2)
print(lista)

# [].count
lista = ['Vermelho', 'Azul', 'Branco', 'Azul']

print(lista.count('Vermelho'))
print(lista.count('Azul'))

# [].extend. Adiciona tudo no final da lista
linguages = ['Python', 'Js', 'c']

print(linguages)

linguages.extend(['Java', 'csharp'])

print(linguages)

# [].index. Encontra o priemir ocorrencia do elemento na lista
lista = ['Python', 'Java', 'c', 'csharp']

print(lista.index('Python'))
print(lista.index('Java'))

# [].pop. Por padrão o 'pop' retira o ultimo elemento da lista, mas tambem podemos indicar qual elemento retirar(indicamos o indice)
lista = ['Python', 'Java', 'c', 'csharp']

lista.pop() #retira o 'csharp'
lista.pop() #retira p 'c'
lista.pop(0) #retira o 'Python'

print(lista)

# [].remove. semelhante ao pop, o remove remove um item da lista,mas nesse caso temos que indicar o elemento em si
lista = ['Python', 'Java', 'c', 'csharp']

lista.remove('c') #caso haja mais de um elemnto do mesmo valor, ira remover somente um
print(lista)

# [].reverse
lista = ['Python', 'Java', 'c', 'csharp']

lista.reverse()
print(lista)

# [].sort
lista = ['Python', 'js', 'c', 'Java', 'csharp']

lista.sort() #ordena a lista em ordem alfabetica

lista.sort(reverse=True) #espelha a lista reordenada 

lista.sort(key=lambda x: len(x)) #reordena a lista do menor pro maior valor (nesse caso por numero de caracteres)

lista.sort(key=lambda x: len(x), reverse=True)  #reordena a lista do menor pro maior valor, mas como tem o reverse, ordena do maior para o menor valor (nesse caso por numero de caracteres)

# len. Usado para ver a quantidade de elementos que a lista tem
lista = ['Python', 'js', 'c', 'Java', 'csharp']

len(lista)

# Sorted. Parecido com o sort, porem o sorted é um função
lista = ['Python', 'js', 'c', 'Java', 'csharp']

#sorted(lista, key=lambda x: len(x))
#sorted(lista, key=lambda x: len(x), reverse=True)
sorted(lista)